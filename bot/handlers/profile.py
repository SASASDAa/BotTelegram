# bot/handlers/profile.py
from datetime import datetime

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from bot.database.db_manager import db_manager
from bot.keyboards import profile_inline_keyboard
from bot.states import ProfileStates

router = Router()

@router.message(F.text.in_({"üë§ –ü—Ä–æ—Ñ–∏–ª—å", "/profile"}))
async def profile_command(message: Message):
    user_id = message.from_user.id
    sub_status = await db_manager.get_subscription_status(user_id)
    
    text = f"<b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
    text += f"‚ñ´Ô∏è <b>ID:</b> <code>{user_id}</code>\n"
    
    if sub_status['active']:
        expires_at = sub_status['expires_at']
        expires_at_str = expires_at.strftime('%Y-%m-%d %H:%M')
        remaining = expires_at - datetime.now()
        days_rem = remaining.days
        hours_rem = remaining.seconds // 3600

        text += f"‚ñ´Ô∏è <b>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:</b> –ê–∫—Ç–∏–≤–Ω–∞ ‚úÖ\n"
        text += f"‚ñ´Ô∏è <b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {expires_at_str}\n"
        text += f"‚ñ´Ô∏è <b>–û—Å—Ç–∞–ª–æ—Å—å:</b> {days_rem} –¥. {hours_rem} —á."
    else:
        text += f"‚ñ´Ô∏è <b>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:</b> –ù–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚ùå\n\n"
        text += "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞."
        
    await message.answer(text, reply_markup=await profile_inline_keyboard())

@router.callback_query(F.data == "activate_promo_code")
async def activate_promo_start(query: CallbackQuery, state: FSMContext):
    await state.set_state(ProfileStates.enter_promo_code)
    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏.\n/cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
    await query.answer()

@router.message(ProfileStates.enter_promo_code)
async def activate_promo_received(message: Message, state: FSMContext):
    promo_code_str = message.text.strip()
    user_id = message.from_user.id
    
    promo_details = await db_manager.get_promo_code_details(promo_code_str)
    
    if not promo_details:
        await message.reply("‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.")
        await state.clear()
        return
        
    already_activated = await db_manager.has_user_activated_code(promo_code_str, user_id)
    if already_activated:
        await message.reply("‚ùå –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥.")
        await state.clear()
        return

    max_activations = promo_details['max_activations']
    current_activations = promo_details['current_activations']
    if max_activations != 0 and current_activations >= max_activations:
        await message.reply("‚ùå –õ–∏–º–∏—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–π —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω.")
        await state.clear()
        return

    duration_days = promo_details['duration_days']
    
    await db_manager.activate_promo_code(promo_code_str, user_id)
    new_expiry_date = await db_manager.grant_subscription(user_id, duration_days)
    expiry_str = new_expiry_date.strftime('%Y-%m-%d %H:%M')
    
    await message.answer(
        f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {duration_days} –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n–ù–æ–≤–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {expiry_str}"
    )
    await state.clear()